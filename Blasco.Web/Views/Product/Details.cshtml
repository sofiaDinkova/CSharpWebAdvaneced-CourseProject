@model ProductDetailsViewModel
@using Blasco.Services.Data.Interfaces
@using Blasco.Web.Infrastructure.Extentions;

@inject ICustomerService CustomerService
@inject ICreatorService CreatorService

@{
    
    bool isCreatorrOwnerOfProduct = await this.CreatorService.HasProductWithIdAsync(Model.Id, this.User.GetId());
    bool isCustomerOwnerOfProduct = await this.CustomerService.HasProductWithIdAsync(Model.Id, this.User.GetId());
}

@{
    ViewBag.Title = "Prodict Details";
}
<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<div class="container" style="display:inline">
    <div class="row">
        <div class="col-4">
            @if (Model.ImagesArray != null)
            {
                for (int i = 0; i < Model.ImagesArray.Count; i++)
                {
                    string base64Image = Convert.ToBase64String(Model.ImagesArray[i]);
                    <img class="card-img-top" src="data:image/jpeg;base64,@base64Image" alt="Image" />
                }
            }
            else
            {
                <p>Image not found</p>
            }
        </div>
        <div class="card col-8 border-0">
            <p style="font-size:25px;"><u>@Model.Title</u></p>
            <p>
                Price:
                <b>@String.Format("{0:f2}", Model.Price) BGN</b>
            </p>
            <p>@Model.Description</p>
            <p>Category: <b>@Model.Category</b></p>
            @if (!String.IsNullOrWhiteSpace(Model.City))
            {
                <p>Located in: <b>@Model.City</b></p>
            }
            <p><i>(@(Model.IsPurchased ? "Purchased" : "Not Purchased"))</i></p>
            <div class="form-inline">
                @if (this.User.Identity?.IsAuthenticated ?? false)
                {
                    @if ((this.User.IsCreator() && isCreatorrOwnerOfProduct) || this.User.IsAdmin())
                    {
                        <a asp-area="" asp-controller="Product" asp-action="Edit"
                   asp-route-id="@Model.Id" class="btn btn-outline-dark" method="post">Edit</a>
                        <!-- Button trigger modal -->
                        <button type="button" class="btn btn-outline-dark" data-bs-toggle="modal" data-bs-target="#deleteModal">
                            Delete
                        </button>

                        <!-- Modal -->
                        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h1 class="modal-title fs-5" id="deleteModalLabel">Delete Product</h1>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        Are you sure you wan to delete product: @Model.Title
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal">Close</button>
                                        <form asp-area="" asp-controller="Product" asp-action="Delete" asp-route-id="@Model.Id.ToString()" method="post">
                                            <input class="btn btn-outline-dark" type="submit" value="Delete" />
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                    }

                    @if (!Model.IsPurchased && !isCreatorrOwnerOfProduct)
                    {
                        <form class="ml-2" asp-area="" asp-controller="Product"
                      asp-action="PurchaseProduct" asp-route-id="@Model.Id"
                              method="post">
                            <input class="btn btn-outline-dark" type="submit"
                                   value="PurchaseProduct" />
                        </form>
                    }
                    @if (this.User.IsCustomer() && isCustomerOwnerOfProduct)
                    {
                        <form asp-controller="Product" asp-action="CancelProduct"
                      asp-route-id="@Model.Id.ToString()" method="post">
                            <input class="btn btn-outline-dark" type="submit" value="Cancel" />
                        </form>
                    }
                }
            </div>

            <p></p>
            <div class="card" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title">Creator Info</h5>
                    <p class="card-text">Email: @Model.CreatorEmail</p>
                    <p class="card-text">Pseudonym: @Model.CreatorPseudonym</p>
                </div>
            </div>
        </div>
    </div>
</div>
