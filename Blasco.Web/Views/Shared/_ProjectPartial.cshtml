@using Blasco.Services.Data.Interfaces;
@using Blasco.Web.Infrastructure.Extentions;

@model ProjectAllViewModel

@inject ICreatorService CreatorService

@{

    bool isCreatorrOwnerOfProject = await this.CreatorService.HasProjectWithIdAsync(Model.Id, this.User.GetId());
}
<style>
    body {
        background-color: #f8f9fa;
    }

    .challenge-box {
        background-color: #fff;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        overflow: hidden;
        margin-bottom: 20px;
    }

    .challenge-image {
        width: 100%;
        height: auto;
    }

    .challenge-details {
        padding: 20px;
    }

    .challenge-title {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .challenge-info {
        font-size: 16px;
        margin-bottom: 5px;
    }

    .challenge-description {
        font-size: 18px;
        line-height: 1.6;
        margin-bottom: 20px;
    }

    .challenge-price {
        font-size: 24px;
        color: #6c757d; /* Gray color for price */
        font-weight: bold;
    }

    .form-container {
        display: flex;
        align-items: center;
    }

        .form-container form {
            margin-right: 10px;
        }

    .participate-button {
        color: #6c757d; /* Gray color for button text */
        border: 2px solid #6c757d; /* Gray outline for button */
        background-color: transparent; /* Transparent background for button */
        border-radius: 4px;
        padding: 10px 20px;
        text-decoration: none;
        font-size: 18px;
        transition: background-color 0.3s, color 0.3s;
    }

        .participate-button:hover {
            color: #fff; /* White text on hover */
            background-color: #6c757d; /* Gray background on hover */
        }

</style>
<div class="container mt-4">
    <div class="row">

        <div class="col-md-6">
            <div class="challenge-box">
                @if (Model.ImagesArray != null)
                {
                    for (int i = 0; i < Model.ImagesArray.Count; i++)
                    {
                        string base64Image = Convert.ToBase64String(Model.ImagesArray[i]);
                        <img class="card-img-top" src="data:image/jpeg;base64,@base64Image" alt="Image" />
                    }
                }
                else
                {
                    <p>Image not found</p>
                }
            </div>
        </div>
        <div class="col-md-6">
            <div class="challenge-box">
                <div class="challenge-details">
                    <h5 class="challenge-title">@Model.Title</h5>
                    <p class="challenge-info">
                        <strong>Creator</strong> @Model.CreatorPseudonym<br />
                    </p>
                    <p class="challenge-description">@Model.Description</p>

                    <a asp-area="" asp-controller="Project" asp-action="Details" asp-route-id="@Model.Id.ToString()"
                       class="btn btn-success">Details</a>

                    @if (this.User.Identity?.IsAuthenticated ?? false)
                    {
                        if ((this.User.IsCreator() && isCreatorrOwnerOfProject) || this.User.IsAdmin())
                        {
                            <a asp-area="" asp-controller="Project" asp-action="Edit" asp-route-id="@Model.Id.ToString()"
                               class="btn btn-warning">Edit</a>

                            <a asp-area="" asp-controller="Project" asp-action="Delete" asp-route-id="@Model.Id.ToString()"
                               class="btn btn-danger">Delete</a>
                        }
                    }

                </div>
            </div>
        </div>
    </div>
</div>